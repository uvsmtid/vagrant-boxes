# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|


  # Example configuration of new VM..
  #
  config.vm.define :test_vm do |test_vm|

    # Box name
    #
    # NOTE: This is unpublished box which does not have namespace prefix.
    test_vm.vm.box = "windows-server-2012-R2-gui"

    # Domain Specific Options
    #
    # See README for more info.
    #
    test_vm.vm.provider :libvirt do |domain|

      domain.memory = 2048
      domain.cpus = 2

      # In case of `libvirt`, specify `qxl` graphics card type.
      # This graphics supports multiple monitors for VM and better resolution.
      domain.video_type = 'qxl'

      # NOTE: At the moment, this box does not boot with `VirtIO` storage type.
      # TODO: Update box to use `virtio` for storage.
      domain.disk_bus = 'ide'

      # NOTE: At the moment, this box does not connect with `VirtIO` network adapter.
      # TODO: Update box to use `virtio` for network.
      domain.nic_model_type = 'rtl8139'

    end

    # NOTE: SSH is not available on Windows by default.
    # TODO: Fix communication over `winrm` to confirm it works.
    test_vm.vm.communicator = "winrm"
    test_vm.winrm.username = "Administrator"
    test_vm.winrm.password = "Vagrant2012!"

    # Interfaces for VM
    #
    # Networking features in the form of `config.vm.network` support private
    # networks concept. No public network or port forwarding are supported in
    # current version of provider. See README for more info.
    #
    #test_vm.vm.network :private_network, :ip => '10.20.30.40'
    #test_vm.vm.network :bridged, :adapter => 1
    #test_vm.vm.network :bridged, :adapter => 2

  end

  # Options for libvirt vagrant provider.
  config.vm.provider :libvirt do |libvirt|

    # A hypervisor name to access. Different drivers can be specified, but
    # this version of provider creates KVM machines only. Some examples of
    # drivers are kvm (qemu hardware accelerated), qemu (qemu emulated),
    # xen (Xen hypervisor), lxc (Linux Containers),
    # esx (VMware ESX), vmwarews (VMware Workstation) and more. Refer to
    # documentation for available drivers (http://libvirt.org/drivers.html).
    libvirt.driver = 'kvm'

    # The name of the server, where libvirtd is running.
    # @uvsmtid: Comment this out in order to use `qemu:///system` connection
    # libvirt.host = 'localhost'

    # If use ssh tunnel to connect to Libvirt.
    libvirt.connect_via_ssh = false

    # The username and password to access Libvirt. Password is not used when
    # connecting via ssh.
    libvirt.username = 'root'
    # libvirt.password = 'secret'

    # Libvirt storage pool name, where box image and instance snapshots will
    # be stored.
    libvirt.storage_pool_name = 'default'

    # Set a prefix for the machines that's different than the project dir name.
    # libvirt.default_prefix = ''

  end
end

